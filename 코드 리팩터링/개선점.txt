https://velog.io/@sypear
위 사이트같이 디자인을 개선할 필요가 있다.(프런트엔드는 눈에 잘 보이게 해야 하므로)



코드 평가 기준 : 간결성, 가독성, 예측 가능성

기본 기능
inline : span
block : div
inline-block : button, input

html에 적힌 문자를 바꿀 때
-div에 class를 작성하고 기본 문자를 통째로 바꾸거나
-div 중간에 span을 끼워넣어서 특정 문자만 교환

innerHTML과 innerText과 textContent 차이
https://velog.io/@kim_unknown_/JavaScript-Difftext
innerHTML은 요소 내에 있는 HTML과 XML 모두를 의미하고,
innerText는 요소 내에서 사용자에게 보여지는 text를 의미하고,
textContent는 script나 style 태그와 상관없이 해당 노드가 가지고 있는 text를 의미한다.


배열 메서드
map : 형태는 변경할 수 있으나 길이는 유지
sort
filter : 길이는 변경하지만 형태는 바꾸지 않음, 조건에 맞는 항목이 없다면 빈 배열이 반환
find : 한 개의 데이터가 반환, 조건에 맞는 항목이 없다면 undefinded가 반환된다.
foreach : 반환값이 없다.
reduce : 무엇이든 처리 가능

배열 펼침 연산자
-펼침 연산자로 배열 항목을 조작하기
-push( ) 메서드 대신 펼침 연산자 사용
-펼침 연산자로 배열의 사본을 만들 수 있다
-... 연산자는 객체에는 사용할 수 없다
-다만 const cart = [
  {
    name: 'The Foundation Triology',
  }
]; 다만 이런 형식은 됀다.

slice(0, 1)을 한다면? end index를 제외한다
slice에서 시작점만 인수로 전달하면 시작점부터 배열의 마지막 항목까지 반환한다.

객체
-객체에 값이 있는지 검사할 때 키를 정의하지 않으면 오류가 발생하지 않고 undefined를 반환한다.

객체 대신 map 객체을 활용해 순회하기
-객체는 순서가 보장되지 않아서 정렬할 수 없다
-객체의 키값은 정수를 사용할 수 없다.

객체 값의 길이 구하기
-graph[key].length


X좌표와 Y좌표 구하기
const image = document.querySelector('.image');
        //전체 이미지 좌표 관련 요약
        const rect = image.getBoundingClientRect();
        console.log(rect);

        image.addEventListener('click', (event) => {
        const mouseX = event.offsetX;
        const mouseY = event.offsetY;

        // 좌표 출력 또는 추가 로직 수행
        console.log('X 좌표:', mouseX);
        console.log('Y 좌표:', mouseY);
});

https://inpa.tistory.com/entry/JS-🌐-HTML-요소의-위치X-Y-값-얻기

html에서 버튼의 class가져오기
-classList 메서드는 DOMTokenList 객체를 가져옴
--const className = clickedButton.classList;
--DOMTokenList ['scissors', value: 'scissors']
-가져온 DOMTokenList 객체를 배열로 변환할 때 Array.from 활용
--const myChoice = Array.from(className)
---['scissors']